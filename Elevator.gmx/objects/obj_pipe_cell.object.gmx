<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_empty_pipe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pipe_type = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_hover_pipe)) {
    if (pipe_type == -1 || pipe_type == obj_hover_pipe.type) {
        with (obj_hover_pipe) {
            instance_destroy();
        }
        switch (pipe_type) {
            case 1: obj_horiz_pipe.number = obj_horiz_pipe.number + 1; break;
            case 2: obj_vert_pipe.number = obj_vert_pipe.number + 1; break;
            case 3: obj_upleft_pipe.number = obj_upleft_pipe.number + 1; break;
            case 4: obj_upright_pipe.number = obj_upright_pipe.number + 1; break;
            case 5: obj_downleft_pipe.number = obj_downleft_pipe.number + 1; break;
            case 6: obj_downright_pipe.number = obj_downright_pipe.number + 1; break;
        }
    }
    else if (pipe_type == 0) {
        pipe_type = obj_hover_pipe.type;
        with (obj_hover_pipe) {
            instance_destroy();
        }
        switch (pipe_type) {
            case 1: obj_horiz_pipe.number = obj_horiz_pipe.number - 1; break;
            case 2: obj_vert_pipe.number = obj_vert_pipe.number - 1; break;
            case 3: obj_upleft_pipe.number = obj_upleft_pipe.number - 1; break;
            case 4: obj_upright_pipe.number = obj_upright_pipe.number - 1; break;
            case 5: obj_downleft_pipe.number = obj_downleft_pipe.number - 1; break;
            case 6: obj_downright_pipe.number = obj_downright_pipe.number - 1; break;
        }
    }
    else {
        switch (pipe_type) {
            case 1: obj_horiz_pipe.number = obj_horiz_pipe.number + 1; break;
            case 2: obj_vert_pipe.number = obj_vert_pipe.number + 1; break;
            case 3: obj_upleft_pipe.number = obj_upleft_pipe.number + 1; break;
            case 4: obj_upright_pipe.number = obj_upright_pipe.number + 1; break;
            case 5: obj_downleft_pipe.number = obj_downleft_pipe.number + 1; break;
            case 6: obj_downright_pipe.number = obj_downright_pipe.number + 1; break;
        }
        pipe_type = obj_hover_pipe.type;
        with (obj_hover_pipe) {
            instance_destroy();
        }
        switch (pipe_type) {
            case 1: obj_horiz_pipe.number = obj_horiz_pipe.number - 1; break;
            case 2: obj_vert_pipe.number = obj_vert_pipe.number - 1; break;
            case 3: obj_upleft_pipe.number = obj_upleft_pipe.number - 1; break;
            case 4: obj_upright_pipe.number = obj_upright_pipe.number - 1; break;
            case 5: obj_downleft_pipe.number = obj_downleft_pipe.number - 1; break;
            case 6: obj_downright_pipe.number = obj_downright_pipe.number - 1; break;
        }
    }

}
else {

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (pipe_type) {
    case -1:
        sprite_index = spr_x_pipe;
        break;
    case 0:
        sprite_index = spr_empty_pipe;
        break;
    case 1:
        sprite_index = spr_horiz_pipe;
        break;
    case 2:
        sprite_index = spr_vert_pipe;
        break;
    case 3:
        sprite_index = spr_upleft_pipe;
        break;
    case 4:
        sprite_index = spr_upright_pipe;
        break;
    case 5:
        sprite_index = spr_downleft_pipe;
        break;
    case 6:
        sprite_index = spr_downright_pipe;
        break;
}
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
