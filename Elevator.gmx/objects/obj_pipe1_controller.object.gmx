<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var row,col;
//var begin_row, begin_col, curr_row, curr_col;
solved = 0;
direc = 0;
begin_col = 2;
begin_row = 0;
for (row = 0; row &lt; 4; row++) {
    for (col = 0; col &lt; 4; col++) {
        pipes[row,col] = 0;
       pipe_id[row,col] = instance_create(200 + col * 100, 200 + row * 100, obj_pipe_cell);
    }
}
pipes[1,0] = -1;
pipe_id[1,0].pipe_type = -1;
pipes[1,1] = -1;
pipe_id[1,1].pipe_type = -1;
pipes[3,2] = -1;
pipe_id[3,2].pipe_type = -1;
entry = instance_create(200 - 100, 200 + 200, obj_img);
entry.sprite_index = spr_horiz_pipe;
exitpipe = instance_create(200 + 400, 200, obj_img);
exitpipe.sprite_index = spr_horiz_pipe;
horiz = instance_create(800, 100, obj_horiz_pipe);
horiz.number = 3;
vert = instance_create(800, 200, obj_vert_pipe);
vert.number = 1;
upleft = instance_create(800, 300, obj_upleft_pipe);
upleft.number = 1;
upright = instance_create(800, 400, obj_upright_pipe);
upright.number = 0;
downleft = instance_create(800, 500, obj_downleft_pipe);
downleft.number = 0;
downright = instance_create(800, 600, obj_downright_pipe);
downright.number = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (solved &amp;&amp; global.level != 1)
    room_goto(room_pipe2);
if (solved &amp;&amp; global.level == 1)
    room_goto(HotelSuiteDoor);
curr_row = 2;
curr_col = 0;
direc = 0;
var curr_pipe;
curr_pipe = pipe_id[curr_row,curr_col].pipe_type;

while (curr_pipe != -1) {
    show_debug_message("pipe type: " + string(curr_pipe));
    show_debug_message(string(curr_row) + " " + string(curr_col));
    show_debug_message("direc: " + string(direc));
    if (curr_row == 0 &amp;&amp; curr_col == 4 &amp;&amp; direc == 1) {
        solved = 1;
        curr_pipe = -1;
    }
    else if (curr_row &lt; 0 || curr_col &lt; 0 || curr_row &gt; 3 || curr_col &gt; 3) {
        curr_pipe = -1;
    }
    else {
    curr_pipe = pipe_id[curr_row,curr_col].pipe_type;
    switch (curr_pipe) {
        case -1:
            break;
        case 0:
            curr_pipe = -1;
            break;
        case 1:
            if (direc == 2 || direc == 4)
                curr_pipe = -1;
            else if (direc == 1) {
                curr_col = curr_col + 1;
                
            }
            else if (direc == 3) {
                curr_col = curr_col - 1;
            }
            else {
                curr_col = curr_col + 1;
                direc = 1;
            }
            break;
        case 2:
            if (direc == 1 || direc == 3 || direc == 0)
                curr_pipe = -1;
            else if (direc == 2)
                curr_row = curr_row - 1;
            else
                curr_row = curr_row + 1;
            break;
        case 3:
            if (direc == 0) 
                direc = 1;
            if (direc == 1) {
                curr_row = curr_row - 1;
                direc = 2;
            }
            else if (direc == 4) {
                curr_col = curr_col - 1;
                direc = 3;
            }
            else
                curr_pipe = -1;
            break;
        case 4:
            if (direc == 3) {
                curr_row = curr_row - 1;
                direc = 2;
            }
            else if (direc == 4) {
                curr_col = curr_col + 1;
                direc = 1;
            }
            else
                curr_pipe = -1;
            break;
        case 5:
            if (direc == 0) 
                direc = 1;
            if (direc == 1) {
                curr_row = curr_row + 1;
                direc = 4;
            }
            else if (direc == 2) {
                curr_col = curr_col - 1;
                direc = 3;
            }
            else
                curr_pipe = -1;
            break;
        case 6:
            if (direc == 3) {
                curr_row = curr_row + 1;
                direc = 4;
            }
            else if (direc == 2) {
                curr_col = curr_col + 1;
                direc = 1;
            }
            else
                curr_pipe = -1;
            break;
    }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(50,50,string(mouse_x) + " " + string(mouse_y));
//draw_text(200,50,string(solved));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
